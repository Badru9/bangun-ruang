# .github/workflows/ci.yml

name: React CI/CD with Docker

on:
  push:
    branches:
      - main # Jalankan workflow ini setiap kali ada push ke branch 'main'
  pull_request:
    branches:
      - main # Jalankan workflow ini setiap kali ada pull request ke branch 'main'

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Dependencies
        run: npm install

      - name: Run ESLint
        run: npm run lint

      - name: Build React Project
        run: npm run build

      - name: Run Tests
        run: npm test

  build_and_push_docker_image:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: build_and_test # Job ini akan berjalan HANYA jika 'build_and_test' berhasil

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }} # Menggunakan username GitHub yang memicu workflow
          password: ${{ secrets.DOCKER_TOKEN }} # Menggunakan secret yang kita buat

      - name: Extract Docker metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }} # Nama image di GHCR (misal: ghcr.io/user/repo-name)
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,format=short,prefix=sha-
            type=ref,event=branch
            type=semver,pattern={{version}}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: . # Konteks build adalah direktori saat ini (akar repo)
          push: true # Aktifkan push ke registry
          tags: ${{ steps.meta.outputs.tags }} # Gunakan tags yang diekstrak dari metadata
          labels: ${{ steps.meta.outputs.labels }} # Gunakan labels yang diekstrak
          file: ./Dockerfile # Lokasi Dockerfile Anda
